[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Daniel\Desktop\Bachelor_Arbeit\Testing\espnow\build\bootloader\esp-idf\esptool_py && C:\Users\Daniel\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/Daniel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/espnow/build/bootloader/bootloader.bin"
Bootloader binary size 0x6a10 bytes. 0x5f0 bytes (5%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/my_example.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable espnow_example.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/espnow/build/espnow_example.bin
[7/8] cmd.exe /C "cd /D C:\Users\Daniel\Desktop\Bachelor_Arbeit\Testing\espnow\build\esp-idf\esptool_py && C:\Users\Daniel\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/Daniel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/espnow/build/partition_table/partition-table.bin C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/espnow/build/espnow_example.bin"
espnow_example.bin binary size 0xb48d0 bytes. Smallest app partition is 0x100000 bytes. 0x4b730 bytes (29%) free.
[7/8] cmd.exe /C "cd /D C:\Users\Daniel\esp\esp-idf\components\esptool_py && C:\Users\Daniel\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/Daniel/esp/esp-idf -D SERIAL_TOOL=C:/Users/Daniel/.espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Users/Daniel/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Daniel/Desktop/Bachelor_Arbeit/Testing/espnow/build -P C:/Users/Daniel/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 espnow_example.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM7
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: 7c:9e:bd:65:b2:3c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000c4fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 27152 bytes to 16981...
Writing at 0x00001000... (50 %)
Writing at 0x00007708... (100 %)
Wrote 27152 bytes (16981 compressed) at 0x00001000 in 0.8 seconds (effective 257.8 kbit/s)...
Hash of data verified.
Compressed 739536 bytes to 477848...
Writing at 0x00010000... (3 %)
Writing at 0x0001afc6... (6 %)
Writing at 0x000242c9... (10 %)
Writing at 0x000297c2... (13 %)
Writing at 0x00031b3a... (16 %)
Writing at 0x00037353... (20 %)
Writing at 0x0003ccdb... (23 %)
Writing at 0x00042b57... (26 %)
Writing at 0x0004862b... (30 %)
Writing at 0x0004d7db... (33 %)
Writing at 0x00052cc9... (36 %)
Writing at 0x00057ec6... (40 %)
Writing at 0x0005d5c6... (43 %)
Writing at 0x00062d1b... (46 %)
Writing at 0x00068397... (50 %)
Writing at 0x0006e122... (53 %)
Writing at 0x000735d9... (56 %)
Writing at 0x00078cd9... (60 %)
Writing at 0x0007e672... (63 %)
Writing at 0x00083ebb... (66 %)
Writing at 0x0008996b... (70 %)
Writing at 0x0008f61c... (73 %)
Writing at 0x00094e2a... (76 %)
Writing at 0x0009a9c0... (80 %)
Writing at 0x000a4386... (83 %)
Writing at 0x000ab539... (86 %)
Writing at 0x000b3135... (90 %)
Writing at 0x000b8a05... (93 %)
Writing at 0x000be432... (96 %)
Writing at 0x000c3780... (100 %)
Wrote 739536 bytes (477848 compressed) at 0x00010000 in 11.0 seconds (effective 536.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 352.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
